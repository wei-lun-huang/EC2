name: Main workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - develop
      - release
      - master
    types: [opened, synchronize, closed]
jobs:
  tests:
    name: Test
    # if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master'
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: Debug Info
        run: |
          whoami
          groups $USER
          env
      - name: Check Docker version
        run: docker --version
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Echo
        run: |
          echo $MYSQL_USER
          echo $MYSQL_PWD
          echo $MYSQL_HOST
          echo $MYSQL_PORT
          echo $MYSQL_DB
      - name: Install dependencies
        run: |
          pip install -r pip-requirements.txt
      - name: Run
        run: |
          python model.py
      - name: Set environment variables for develop
        if: github.ref == 'refs/heads/develop'
        env:
          MYSQL_USER: ${{ secrets.DB_DEV_USER }}
          MYSQL_PWD: ${{ secrets.DB_DEV_PASSWORD }}
          MYSQL_HOST: ${{ secrets.DB_DEV_HOST }}
          MYSQL_PORT: ${{ secrets.DB_DEV_PORT }}
          MYSQL_DB: ${{ secrets.DB_DEV_DATABASE }}
          SQLALCHEMY_CHARSET_SYNTAX: "charset=utf8mb4"
      - name: Set environment variables for staging
        if: github.ref == 'refs/heads/release'
        env:
          MYSQL_USER: ${{ secrets.DB_STAGING_USER }}
          MYSQL_PWD: ${{ secrets.DB_STAGING_PASSWORD }}
          MYSQL_HOST: ${{ secrets.DB_STAGING_HOST }}
          MYSQL_PORT: ${{ secrets.DB_STAGING_PORT }}
          MYSQL_DB: ${{ secrets.DB_STAGING_DATABASE }}
      - name: Set environment variables for production
        if: github.ref == 'refs/heads/master'
        env:
          MYSQL_USER: ${{ secrets.DB_PROD_USER }}
          MYSQL_PWD: ${{ secrets.DB_PROD_PASSWORD }}
          MYSQL_HOST: ${{ secrets.DB_PROD_HOST }}
          MYSQL_PORT: ${{ secrets.DB_PROD_PORT }}
          MYSQL_DB: ${{ secrets.DB_PROD_DATABASE }}
