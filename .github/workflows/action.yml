name: Main workflow
on:
  workflow_dispatch:
    inputs:
      env:
        description: 'GOGO_ENV'
        required: true
        default: 'develop'
        type: choice
        options:
          - develop
          - release
          - production
  push:
    branches:
      - master
  pull_request:
    branches:
      - develop
      - release
      - master
    types: [opened, synchronize]
jobs:
  set_envs:
    runs-on: self-hosted
    outputs:
      GOGO_ENV: ${{ steps.set_env.outputs.GOGO_ENV }}
    steps:
      - uses: actions/checkout@v2
      - name: Set environment variables
        id: set_env
        run: |
          echo ${{ inputs.env }}
          BASE_REF=${{ github.event.pull_request.base.ref }}
          BASE_REF=${BASE_REF:-default_value}
          if [[ '${{ inputs.env }}' == 'release' || $BASE_REF == 'release' || '${{ github.event.schedule }}' == '0 13 * * *' ]]; then
            echo "GOGO_ENV=staging" >> "$GITHUB_OUTPUT"
          elif [[ '${{ inputs.env }}' == 'master' || $BASE_REF == 'master' || '${{ github.event.schedule }}' == '0 15 * * *' ]]; then
            echo "GOGO_ENV=production" >> "$GITHUB_OUTPUT"
          fi
          echo "hello world"
  echo:
      runs-on: self-hosted
      needs: set_envs
      steps:
        - uses: actions/checkout@v2
        - name: echo
          env:
            GOGO_ENV: ${{needs.set_envs.outputs.GOGO_ENV}}
          run: |
            echo $GOGO_ENV
  # tests:
  #   name: Test
  #   # if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master'
  #   # runs-on: ubuntu-latest
  #   runs-on: self-hosted
  #   env:
  #     MYSQL_USER: ${{ secrets.DB_DEV_USER }}
  #     MYSQL_PWD: ${{ secrets.DB_DEV_PASSWORD }}
  #     MYSQL_HOST: ${{ secrets.DB_DEV_HOST }}
  #     MYSQL_PORT: ${{ secrets.DB_DEV_PORT }}
  #     MYSQL_DB: ${{ secrets.DB_DEV_DATABASE }}
  #   steps:
  #     - name: Debug Info
  #       run: |
  #         whoami
  #         groups $USER
  #         env
  #     - name: Check Docker version
  #       run: docker --version
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.9
  #     # - name: Set Environment Variables
  #     #   if: github.event.pull_request.base.ref == 'develop'
  #     #   env:
  #     #     MYSQL_USER: ${{ secrets.DB_DEV_USER }}
  #     #     MYSQL_PWD: ${{ secrets.DB_DEV_PASSWORD }}
  #     #     MYSQL_HOST: ${{ secrets.DB_DEV_HOST }}
  #     #     MYSQL_PORT: ${{ secrets.DB_DEV_PORT }}
  #     #     MYSQL_DB: ${{ secrets.DB_DEV_DATABASE }}
  #     #   run: |
  #     #     echo $MYSQL_USER
  #     #     echo $MYSQL_PWD
  #     #     echo $MYSQL_HOST
  #     #     echo $MYSQL_PORT
  #     #     echo $MYSQL_DB
  #     - name: Install dependencies
  #       run: |
  #         pip install -r pip-requirements.txt --no-cache-dir
  #     - name: Run
  #       run: |
  #         python model.py
